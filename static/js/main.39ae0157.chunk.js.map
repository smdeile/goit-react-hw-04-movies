{"version":3,"sources":["services/moviesAPI.js","pages/MoviesList.js","components/FormQuery.js","pages/MoviesPage.js","pages/HomePage.js","pages/MovieDetailsPage.js","pages/NotFound.js","components/Nav.js","components/app.js","index.js"],"names":["key","fetchMovies","a","axios","get","response","data","results","fetchMovie","query","fetchId","id","fetchActor","cast","fetchFullInfo","fetchReviews","MoviesList","movies","console","log","map","movie","title","to","FormQuery","state","handleSubmit","e","preventDefault","queryMovie","props","location","history","push","search","setState","handleChange","target","value","MoviesAPI","then","prevProps","prevState","this","onSubmit","onChange","placeholder","type","name","length","Component","MoviesPage","path","component","Movies","moviesAPI","MovieDetailsPage","actors","fullInfo","reviews","handleClick","match","params","styledLink","color","onClick","src","poster_path","alt","vote_average","overview","genres","genre","activeStyle","actor","profile_path","width","character","review","author","content","NotFound","Nav","exact","App","HomePage","MoviePage","NotFoundPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39ae0157.chunk.js","sourcesContent":["import axios from 'axios';\r\n// axios.defaults.baseURL = 'http://localhost:3001';\r\nconst key = '38bb43799c173bf75633ed2786933102';\r\nexport const fetchMovies = async () => {\r\n  const response = await axios.get(\r\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${key}`,\r\n  );\r\n  return response.data.results;\r\n};\r\nexport const fetchMovie = async query => {\r\n  const fetchMovie = await axios.get(\r\n    `https://api.themoviedb.org/3/search/company?api_key=${key}&query=${query}&page=1`,\r\n  );\r\n  return fetchMovie.data.results;\r\n};\r\nexport const fetchId = async id => {\r\n  const fetchId = await axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`,\r\n  );\r\n  return fetchId.data;\r\n};\r\nexport const fetchActor = async id => {\r\n  const fetchActor = await axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${key}`,\r\n  );\r\n  return fetchActor.data.cast;\r\n};\r\nexport const fetchFullInfo = async id => {\r\n  const fetchFullInfo = await axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`,\r\n  );\r\n  return fetchFullInfo.data;\r\n};\r\nexport const fetchReviews = async id => {\r\n  const fetchReviews = await axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`,\r\n  );\r\n  return fetchReviews.data.results;\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst MoviesList = ({ movies = [] }) => (\r\n  <ul>\r\n    {console.log(movies)}\r\n    {movies.map(\r\n      movie =>\r\n        movie.title && (\r\n          <li key={movie.id}>\r\n            <NavLink to={`/movies/${movie.id}`}>{movie.title}</NavLink>\r\n          </li>\r\n        ),\r\n    )}\r\n  </ul>\r\n);\r\nexport default MoviesList;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as MoviesAPI from '../services/moviesAPI';\r\nimport MoviesList from '../pages/MoviesList';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport class FormQuery extends Component {\r\n  static propTypes = {};\r\n  state = { query: '', movies: [] };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(this.props);\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const queryMovie = this.state.query;\r\n    this.fetchMovie(queryMovie);\r\n    console.log(this.props);\r\n    console.log(this.props.location);\r\n\r\n    this.props.history.push({\r\n      ...this.props.location,\r\n      search: `?query=${queryMovie}`,\r\n    });\r\n    this.setState({ query: '' });\r\n  };\r\n  handleChange = ({ target }) => {\r\n    this.setState({ query: target.value });\r\n  };\r\n\r\n  fetchMovie = query => {\r\n    MoviesAPI.fetchMovie(query).then(movies => this.setState({ movies }));\r\n    console.log(this.state);\r\n  };\r\n  render() {\r\n    const { movies } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            onChange={this.handleChange}\r\n            placeholder=\"Find your movie\"\r\n            type=\"text\"\r\n            name=\"query\"\r\n            value={this.state.query}\r\n          ></input>\r\n          <button>Find</button>\r\n        </form>\r\n        {this.state.movies.length > 0 && (\r\n          <ul>\r\n            {movies.map(movie => (\r\n              <li key={movie.id}>\r\n                <NavLink to={`/movies/${movie.id}`}>{movie.name}</NavLink>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormQuery;\r\n","import React, { Component } from 'react';\r\nimport FormQuery from '../components/FormQuery';\r\nimport { Route } from 'react-router-dom';\r\n\r\n// import PropTypes from 'prop-types';\r\n\r\nexport class MoviesPage extends Component {\r\n  static propTypes = {};\r\n  render() {\r\n    console.log(this.props);\r\n\r\n    return (\r\n      <div>\r\n        <Route path=\"/movies\" component={FormQuery} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n","import React, { Component } from 'react';\r\nimport * as moviesAPI from '../services/moviesAPI';\r\nimport MoviesList from './MoviesList';\r\n\r\nexport default class Movies extends Component {\r\n  state = { movies: [] };\r\n  componentDidMount() {\r\n    moviesAPI.fetchMovies().then(movies => {\r\n      this.setState({ movies });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Trending today</h1>\r\n        <MoviesList movies={movies} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Switch, NavLink, Route } from 'react-router-dom';\r\nimport * as moviesAPI from '../services/moviesAPI';\r\n\r\nexport default class MovieDetailsPage extends Component {\r\n  state = { movie: null, actors: null, fullInfo: null, reviews: null };\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    console.log(this.props);\r\n    moviesAPI.fetchId(id).then(movie => this.setState({ movie }));\r\n    moviesAPI.fetchActor(id).then(actors => this.setState({ actors }));\r\n    moviesAPI.fetchFullInfo(id).then(fullInfo => this.setState({ fullInfo }));\r\n    moviesAPI.fetchReviews(id).then(reviews => this.setState({ reviews }));\r\n  }\r\n  handleClick = e => {\r\n    e.preventDefault();\r\n    console.log(this.props);\r\n  };\r\n  render() {\r\n    const styledLink = { color: 'red' };\r\n    const { movie, actors, fullInfo, reviews } = this.state;\r\n\r\n    const CastComponent = () => {\r\n      return (\r\n        <>\r\n          <ul>\r\n            {actors.map(actor => (\r\n              <li key={actor.id}>\r\n                {actor.profile_path && (\r\n                  <img\r\n                    src={`https://image.tmdb.org/t/p/w300/${actor.profile_path}`}\r\n                    alt=\"actors photo\"\r\n                    width=\"50px\"\r\n                  />\r\n                )}\r\n                <p>{actor.name}</p>\r\n                <p>{`Character: ${actor.character}`}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      );\r\n    };\r\n    const ReviewsComponent = () => {\r\n      return (\r\n        <ul>\r\n          {reviews.map(review => (\r\n            <li key={review.id}>\r\n              <h2>{review.author}</h2>\r\n              <p>{review.content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    };\r\n    return (\r\n      <div>\r\n        {movie && reviews && actors && (\r\n          <>\r\n            <div>\r\n              <button onClick={this.handleClick}>Go back</button>\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\r\n                alt={movie.title}\r\n              />\r\n            </div>\r\n            <div>\r\n              <h2>{movie.title}</h2>\r\n              <p>User score {movie.vote_average * 10 + '%'}</p>\r\n              <h3>Overview </h3>\r\n              <p>{movie.overview}</p>\r\n              <h4>Genres</h4>\r\n              <ul>\r\n                {movie.genres.map(genre => (\r\n                  <li key={genre.id}>{genre.name}</li>\r\n                ))}\r\n              </ul>\r\n              <ul>\r\n                <li>\r\n                  <NavLink\r\n                    to={`/movies/${movie.id}/cast`}\r\n                    activeStyle={styledLink}\r\n                  >\r\n                    Cast\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink\r\n                    to={`/movies/${movie.id}/reviews`}\r\n                    activeStyle={styledLink}\r\n                  >\r\n                    Reviews\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <Switch>\r\n              <Route path={`/movies/:id/cast`} component={CastComponent} />\r\n              <Route\r\n                path={`/movies/:id/reviews`}\r\n                component={ReviewsComponent}\r\n              />\r\n            </Switch>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <p>page not found</p>\r\n  </div>\r\n);\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nconst styledLink = { color: 'red' };\r\nconst Nav = () => (\r\n  <ul>\r\n    <li>\r\n      <NavLink to=\"/\" exact activeStyle={styledLink}>\r\n        Home\r\n      </NavLink>\r\n    </li>\r\n    <li>\r\n      <NavLink to=\"/movies\" activeStyle={styledLink}>\r\n        Movies\r\n      </NavLink>\r\n    </li>\r\n  </ul>\r\n);\r\nexport default Nav;\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport MoviesPage from '../pages/MoviesPage';\r\nimport HomePage from '../pages/HomePage';\r\nimport MoviePage from '../pages/MovieDetailsPage';\r\nimport NotFoundPage from '../pages/NotFound';\r\nimport Nav from './Nav';\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={HomePage} />\r\n          <Route path=\"/movies/:id\" component={MoviePage} />\r\n          <Route path=\"/movies\" component={MoviesPage} />\r\n          <Route component={NotFoundPage} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\nimport './base.css';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Route component={App} />\r\n  </BrowserRouter>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}