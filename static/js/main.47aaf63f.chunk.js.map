{"version":3,"sources":["services/moviesAPI.js","pages/MoviesList.js","components/FormQuery.js","pages/MoviesPage.js","pages/HomePage.js","pages/MovieDetailsPage.js","pages/Movie.js","pages/NotFound.js","components/Nav.js","components/app.js","index.js"],"names":["key","fetchMovies","a","axios","get","response","data","results","fetchMovie","query","fetchId","id","console","log","fetchActor","cast","fetchFullInfo","fetchReviews","MoviesList","movies","map","movie","title","to","FormQuery","state","handleSubmit","e","preventDefault","queryMovie","setState","handleChange","target","value","MoviesAPI","then","prevProps","prevState","this","onSubmit","onChange","placeholder","type","name","length","items","Component","MoviesPage","props","Movies","moviesAPI","MovieDetailsPage","actors","reviews","styledLink","color","src","poster_path","alt","vote_average","overview","genres","genre","activeStyle","path","component","actor","profile_path","width","character","review","author","content","Movie","fullInfo","match","params","NotFound","Nav","exact","App","HomePage","MoviePage","NotFoundPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47aaf63f.chunk.js","sourcesContent":["import axios from 'axios';\r\n// axios.defaults.baseURL = 'http://localhost:3001';\r\nconst key = '38bb43799c173bf75633ed2786933102';\r\nexport const fetchMovies = async () => {\r\n  const response = await axios.get(\r\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${key}`,\r\n  );\r\n  return response.data.results;\r\n};\r\nexport const fetchMovie = async query => {\r\n  const fetchMovie = await axios.get(\r\n    `https://api.themoviedb.org/3/search/company?api_key=${key}&query=${query}&page=1`,\r\n  );\r\n  return fetchMovie.data.results;\r\n};\r\nexport const fetchId = async id => {\r\n  console.log(id);\r\n  const fetchId = await axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`,\r\n  );\r\n  console.log(fetchId.data);\r\n  return fetchId.data;\r\n};\r\nexport const fetchActor = async id => {\r\n  const fetchActor = await axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${key}`,\r\n  );\r\n  console.log(fetchActor.data.cast);\r\n  return fetchActor.data.cast;\r\n};\r\nexport const fetchFullInfo = async id => {\r\n  const fetchFullInfo = await axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`,\r\n  );\r\n  console.log(fetchFullInfo);\r\n  return fetchFullInfo.data;\r\n};\r\nexport const fetchReviews = async id => {\r\n  const fetchReviews = await axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`,\r\n  );\r\n  console.log(fetchReviews.data);\r\n  return fetchReviews.data.results;\r\n};\r\n//https://api.themoviedb.org/3/movie/111/reviews?api_key=38bb43799c173bf75633ed2786933102&language=en-US&page=1\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst MoviesList = ({ movies = [] }) => (\r\n  <ul>\r\n    {movies.map(\r\n      movie =>\r\n        movie.title && (\r\n          <li key={movie.id}>\r\n            <NavLink to={`/movies/${movie.id}`}>{movie.title}</NavLink>\r\n          </li>\r\n        ),\r\n    )}\r\n  </ul>\r\n);\r\nexport default MoviesList;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as MoviesAPI from '../services/moviesAPI';\r\nimport MoviesList from '../pages/MoviesList';\r\n\r\nexport class FormQuery extends Component {\r\n  static propTypes = {};\r\n  state = { query: '', movies: [] };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(this.state);\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const queryMovie = this.state.query;\r\n    this.fetchMovie(queryMovie);\r\n    // this.props.history.push({\r\n    //   ...this.props.location,\r\n    //   search: `?query=${queryMovie}`,\r\n    // });\r\n    this.setState({ query: '' });\r\n  };\r\n  handleChange = ({ target }) => {\r\n    this.setState({ query: target.value });\r\n  };\r\n\r\n  fetchMovie = query => {\r\n    MoviesAPI.fetchMovie(query).then(movies => this.setState({ movies }));\r\n    console.log(this.state);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            onChange={this.handleChange}\r\n            placeholder=\"Find your movie\"\r\n            type=\"text\"\r\n            name=\"query\"\r\n            value={this.state.query}\r\n          ></input>\r\n          <button>Find</button>\r\n        </form>\r\n        {console.log(this.state.movies.length) &&\r\n          this.state.movies.length > 0 && <MoviesList items={this.state} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormQuery;\r\n","import React, { Component } from 'react';\r\nimport FormQuery from '../components/FormQuery';\r\n\r\n// import PropTypes from 'prop-types';\r\n\r\nexport class MoviesPage extends Component {\r\n  static propTypes = {};\r\n  render() {\r\n    console.log(this.props);\r\n\r\n    return (\r\n      <div>\r\n        <FormQuery props={this.props} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n","import React, { Component } from 'react';\r\nimport * as moviesAPI from '../services/moviesAPI';\r\nimport MoviesList from './MoviesList';\r\n\r\nexport default class Movies extends Component {\r\n  state = { movies: [] };\r\n  componentDidMount() {\r\n    moviesAPI.fetchMovies().then(movies => {\r\n      this.setState({ movies });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Trending today</h1>\r\n        <MoviesList movies={movies} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Switch, NavLink, Route } from 'react-router-dom';\r\n// import ActorComponent from './ActorComponent';\r\nimport * as moviesAPI from '../services/moviesAPI';\r\n\r\nexport default class MovieDetailsPage extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const { movie, actors, reviews } = this.props;\r\n    const styledLink = { color: 'red' };\r\n\r\n    const CastComponent = () => {\r\n      return (\r\n        <ul>\r\n          {actors.map(actor => (\r\n            <li key={actor.id}>\r\n              {actor.profile_path && (\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w300/${actor.profile_path}`}\r\n                  alt=\"actors photo\"\r\n                  width=\"50px\"\r\n                />\r\n              )}\r\n              <p>{actor.name}</p>\r\n              <p>{`Character: ${actor.character}`}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    };\r\n    const ReviewsComponent = () => {\r\n      return (\r\n        <ul>\r\n          {reviews.map(review => (\r\n            <li key={review.id}>\r\n              <h2>{review.author}</h2>\r\n              <p>{review.content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    };\r\n    return (\r\n      <div>\r\n        <div>\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\r\n            alt={movie.title}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h2>{movie.title}</h2>\r\n          <p>User score {movie.vote_average * 10 + '%'}</p>\r\n          <h3>Overview </h3>\r\n          <p>{movie.overview}</p>\r\n          <h4>Genres</h4>\r\n          <ul>\r\n            {movie.genres.map(genre => (\r\n              <li key={genre.id}>{genre.name}</li>\r\n            ))}\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <NavLink to={`/movies/${movie.id}/cast`} activeStyle={styledLink}>\r\n                Cast\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink\r\n                to={`/movies/${movie.id}/reviews`}\r\n                activeStyle={styledLink}\r\n              >\r\n                Reviews\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <Switch>\r\n          <Route\r\n            path={`/movies/:id/cast`}\r\n            component={CastComponent}\r\n          />\r\n          <Route\r\n            path={`/movies/:id/reviews`}\r\n            component={ReviewsComponent}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport * as moviesAPI from '../services/moviesAPI';\r\nimport MovieDetailsPage from './MovieDetailsPage';\r\n\r\nexport default class Movie extends Component {\r\n  state = { movie: null, actors: null, fullInfo: null, reviews: null };\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    moviesAPI.fetchId(id).then(movie => this.setState({ movie }));\r\n    moviesAPI.fetchActor(id).then(actors => this.setState({ actors }));\r\n    moviesAPI.fetchFullInfo(id).then(fullInfo => this.setState({ fullInfo }));\r\n    moviesAPI.fetchReviews(id).then(reviews => this.setState({ reviews }));\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    const { movie, actors, fullInfo, reviews } = this.state;\r\n    console.log(reviews);\r\n    return (\r\n      <div>\r\n        {movie && actors && fullInfo && reviews && (\r\n          <div>\r\n            <MovieDetailsPage\r\n              movie={movie}\r\n              actors={actors}\r\n              fullInfo={fullInfo}\r\n              reviews={reviews}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <p>page not found</p>\r\n  </div>\r\n);\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nconst styledLink = { color: 'red' };\r\nconst Nav = () => (\r\n  <ul>\r\n    <li>\r\n      <NavLink to=\"/\" exact activeStyle={styledLink}>\r\n        Home\r\n      </NavLink>\r\n    </li>\r\n    <li>\r\n      <NavLink to=\"/movies\" activeStyle={styledLink}>\r\n        Movies\r\n      </NavLink>\r\n    </li>\r\n  </ul>\r\n);\r\nexport default Nav;\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport MoviesPage from '../pages/MoviesPage';\r\nimport HomePage from '../pages/HomePage';\r\nimport MoviePage from '../pages/Movie';\r\nimport NotFoundPage from '../pages/NotFound';\r\nimport Nav from './Nav';\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={HomePage} />\r\n          <Route path=\"/movies/:id\" component={MoviePage} />\r\n          <Route path=\"/movies\" component={MoviesPage} />\r\n          <Route component={NotFoundPage} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\nimport './base.css';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Route component={App} />\r\n  </BrowserRouter>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}